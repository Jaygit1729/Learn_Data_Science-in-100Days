-- Topics Covered
-- Multiple Joins
-- String Operations
-- Date
-- creating sequencing
-- Subqueries

SELECT * FROM ACTOR;
SELECT * FROM FILM;
SELECT * FROM FILM_ACTOR;
SELECT * FROM PAYMENT;

SELECT * FROM FILM WHERE TITLE = 'FIGHT JAWBREAKER'
SELECT * FROM FILM_ACTOR WHERE FILM_ID = 314
SELECT * FROM ACTOR WHERE ACTOR_ID IN ('2','146','154');

-- Multiple Join
SELECT F.TITLE, A.FIRST_NAME, A.LAST_NAME 
FROM FILM F
INNER JOIN FILM_ACTOR FA ON F.FILM_ID = FA.FILM_ID
INNER JOIN ACTOR A ON A.ACTOR_ID = FA.ACTOR_ID
WHERE TITLE = 'FIGHT JAWBREAKER'

-- Concatinaion
SELECT F.TITLE, CONCAT(A.FIRST_NAME, ' ' , A.LAST_NAME) AS NAME_OF_ACTORS 
FROM FILM F
INNER JOIN FILM_ACTOR FA ON F.FILM_ID = FA.FILM_ID
INNER JOIN ACTOR A ON A.ACTOR_ID = FA.ACTOR_ID
WHERE TITLE = 'FIGHT JAWBREAKER'

-- Sub String
SELECT F.TITLE, SUBSTRING(F.DESCRIPTION, 1, 25) AS SHORT_DESC, CONCAT(A.FIRST_NAME, ' ' , A.LAST_NAME) AS NAME_OF_ACTORS FROM FILM F
INNER JOIN FILM_ACTOR FA ON F.FILM_ID = FA.FILM_ID
INNER JOIN ACTOR A ON A.ACTOR_ID = FA.ACTOR_ID
WHERE TITLE = 'FIGHT JAWBREAKER'

-- Lower Case
SELECT F.TITLE, lower(F.DESCRIPTION), CONCAT(A.FIRST_NAME, ' ' , A.LAST_NAME) AS NAME_OF_ACTORS FROM FILM F
INNER JOIN FILM_ACTOR FA ON F.FILM_ID = FA.FILM_ID
INNER JOIN ACTOR A ON A.ACTOR_ID = FA.ACTOR_ID
WHERE TITLE = 'FIGHT JAWBREAKER'

-- Replace
SELECT F.TITLE, REPLACE(F.DESCRIPTION, 'Girl', 'Boy'), CONCAT(A.FIRST_NAME, ' ' , A.LAST_NAME) AS NAME_OF_ACTORS FROM FILM F
INNER JOIN FILM_ACTOR FA ON F.FILM_ID = FA.FILM_ID
INNER JOIN ACTOR A ON A.ACTOR_ID = FA.ACTOR_ID
WHERE TITLE = 'FIGHT JAWBREAKER'

-- String Length
SELECT F.TITLE, F.DESCRIPTION, LENGTH(F.DESCRIPTION) AS TITLE_LENGTH, CONCAT(A.FIRST_NAME, ' ' , A.LAST_NAME) AS NAME_OF_ACTORS FROM FILM F
INNER JOIN FILM_ACTOR FA ON F.FILM_ID = FA.FILM_ID
INNER JOIN ACTOR A ON A.ACTOR_ID = FA.ACTOR_ID


-- Date
SELECT *, DATE_FORMAT(Payment_Date, "%M %d %Y") AS NEW_DATE FROM PAYMENT Limit 5;
SELECT *, DATE_FORMAT(Payment_Date, "%Y") FROM PAYMENT Limit 5;

-- Add Date
SELECT *, ADDDATE(Payment_Date, INTERVAL 10 DAY) due_date FROM PAYMENT Limit 5;

-- Current Date
SELECT Current_date()

-- Date Difference
-- Add Date
SELECT *, DATEDIFF(Last_Update,ADDDATE(Payment_Date, INTERVAL 10 DAY)) Diff FROM PAYMENT Limit 5;

-- Convert
SELECT CONVERT("2020-11-27", DATE)
SELECT CONVERT("20201127", DATE)
SELECT CONVERT("27-11-2020", DATE)
SELECT STR_TO_DATE('27,11,2020','%d,%m,%Y');

-- Sequencing
SELECT F.TITLE, CONCAT(A.FIRST_NAME, ' ' , A.LAST_NAME) AS NAME_OF_ACTORS,
Rank() over ( partition by Title order by CONCAT(A.FIRST_NAME, ' ' , A.LAST_NAME) Asc ) AS ACTOR_SEQ
FROM FILM F
INNER JOIN FILM_ACTOR FA ON F.FILM_ID = FA.FILM_ID
INNER JOIN ACTOR A ON A.ACTOR_ID = FA.ACTOR_ID
WHERE TITLE = 'FIGHT JAWBREAKER'

-- Sub Queries
SELECT F.TITLE, CONCAT(A.FIRST_NAME, ' ' , A.LAST_NAME) AS NAME_OF_ACTORS
FROM FILM F
INNER JOIN FILM_ACTOR FA ON F.FILM_ID = FA.FILM_ID
INNER JOIN ACTOR A ON A.ACTOR_ID = FA.ACTOR_ID
WHERE CONCAT(A.FIRST_NAME, ' ' , A.LAST_NAME) IN
(
SELECT SUB1.ACTORS FROM
(
SELECT CONCAT(A.FIRST_NAME, ' ' , A.LAST_NAME) AS ACTORS, COUNT(DISTINCT F.FILM_ID)
FROM FILM F
INNER JOIN FILM_ACTOR FA ON F.FILM_ID = FA.FILM_ID
INNER JOIN ACTOR A ON A.ACTOR_ID = FA.ACTOR_ID
GROUP BY CONCAT(A.FIRST_NAME, ' ' , A.LAST_NAME)
HAVING COUNT(DISTINCT F.FILM_ID) > 40
) SUB1
)


